#+OPTIONS: ^:nil
* Installation
  Clone this repository, then inside run

  #+begin_src bash
    pipenv install
    chmod 777 scraper.py
  #+end_src
* Basic Usage
  #+begin_src bash
    ./scraper.py [-fl FOLLOW_LINK] N U I D
  #+end_src
  Where:
 | Parameter         | Description                                           | Example                                 |
 |-------------------+-------------------------------------------------------+-----------------------------------------|
 | N                 | Is the name of a candidate                            | "Pete Aguilar"                          |
 | U                 | Is the URL                                            | "https://peteaguilar.com/on-the-issues" |
 | I                 | Is the Issue HTML pattern                            | "div#not-secret>h3"                     |
 | D                 | Is the Description HTML pattern                      | "section#article>div#insides"           |
 | -fl [FOLLOW_LINK]  | Is the Description Page link HTML pattern (optional) | "div#tiles>div>a"                       |
   
 The full command looks like this:

 #+begin_src bash
   ./scraper.py -fl "div#tiles>div>a" "Pete Aguilar" "https://peteaguilar.com/on-the-issues/" "div#not-secret>h3" "section#article>div#insides"
 #+end_src
** Output
   This will output both to the screen, and to ~out/Candidate_Name.csv~ with the first column being the issue, and the second the description
** HTML patterns
   An HTML Pattern is made up of 3 parts, an html element type, the class name of the html element, and the separator:
   
     ~HTML_ELEMENT_NAME#CLASS_NAME>HTML_ELEMENT_NAME#CLASS_NAME>...>HTML_ELEMENT_NAME#CLASS_NAME~
     
   Where the the seperator denotes the parent to child, I.E. the left element
   is the parent element, and the right is the child, the rightmost being the
   element that either a link or text is extracted from. Multiple matches can
   be returned.

   Note: The ~#CLASS_NAME~ part is optional
*** Example
   #+begin_src html
   <html>
     <div>
       <div class="issue">
         <h3 class="underline">Climate</h3>
         <p>Save the environment!</p>
       </div>
       <div class="issue">
         <h3 class="bold">Education</h3>
         <p>Improve Education!</p>
       </div>
     </div>
     <div>
       <div>
         <h3 class="bold">Contact me</h3>
         <p>123 Sesame Street</p>
       </div>
     </div>
   </html>
   #+end_src
  | Pattern         | Matches                                        |
  |-----------------+------------------------------------------------|
  | h3              | ~<h3 class="climate">Climate</h3>~     |
  |                 | ~<h3 class="education">Education</h3>~ |
  |                 | ~<h3>Contact me</h3>~                  |
  |-----------------+------------------------------------------------|
  | div>h3          | ~<h3 class="climate">Climate</h3>~     |
  |                 | ~<h3 class="education">Education</h3>~ |
  |                 | ~<h3>Contact me</h3>~                  |
  |-----------------+------------------------------------------------|
  | h3#bold         | ~<h3 class="bold">Education</h3>~      |
  |                 | ~<h3>Contact me</h3>~                  |
  |-----------------+------------------------------------------------|
  | div#issue>h3    | ~<h3 class="climate">Climate</h3>~     |
  |                 | ~<h3 class="education">Education</h3>~ |
  |-----------------+------------------------------------------------|
  | div#issue>p     | ~<h3 class="climate">Climate</h3>~     |
  |                 | ~<h3 class="education">Education</h3>~ |
  |-----------------+------------------------------------------------|
  | div#something>p | Nothing                                        |
  |-----------------+------------------------------------------------|
  | div>span>div    | Nothing                                        |
*** Tips for matching
    Open inspect element on your browser, and use the element selector to pick
    the issue/description. Try to pick patterns that are unique to the page,
    but shared only among the issue/description. Try patterns with only one or
    two elements/class names first, and go more specific if the program keeps
    over matching.

** Follow Link Option    
   If the candidate's position description is on another page, then you can
   specify the `-fl` option followed by an html pattern matching an element
   that contains an "href" attribute that equals the link to the page of the
   description. The description html pattern should match whatever the
   description is on that page, and if it makes multiple matches on one page,
   it will be combined into one text block.
** Checking for errors
   The program will print out the list of issues it found and corresponding
   descriptions. If the lengths of these two lists don't match, that means you
   are over/under matching to many/little elements and should try to find a more explicit pattern
